apiVersion: v1
kind: Pod
metadata:
  name: jekyll
spec:
  volumes:
    - name: site
      persistentVolumeClaim:
        claimName: jekyll-site
  containers:
    - name: jekyll
      image: kodekloud/jekyll-serve
      volumeMounts:
        - mountPath: "/site"
          name: site
  initContainers:
  - name: copy-jekyll-site
    image: kodekloud/jekyll
    command: ['sh', '-c',  'jekyll new /site']      
    volumeMounts:
        - mountPath: "/site"
          name: site


apiVersion: v1          
kind: Pod
metadata:
  name: gop-file-server
spec:
  volumes:
    - name: data-store
      persistentVolumeClaim:
        claimName: data-pvc
  containers:
    - name: gop-file-server
      image: kodekloud/fileserver
      volumeMounts:
        - mountPath: "/web"
          name: data-store 

          
apiVersion: v1          
kind: Pod
metadata:
  name: test-pd
spec:
  containers:
  - image: registry.k8s.io/test-webserver
    name: test-container
    volumeMounts:
    - mountPath: /cache
      name: cache-volume
  volumes:
  - name: cache-volume
    emptyDir:
      sizeLimit: 500Mi



pod created with configmap as env  for pod lifecycle : 
        
apiVersion: v1        
kind: Pod
metadata:
  labels:
    run: time-check
  name: time-check
  namespace: dvl1987
spec:
  volumes:
  - name: log-volume
    emptyDir: {}
  containers:
  - image: busybox
    name: time-check
    env:
    - name: TIME_FREQ
      valueFrom:
            configMapKeyRef:
              name: time-config
              key: TIME_FREQ
    volumeMounts:
    - mountPath: /opt/time
      name: log-volume
    command:
    - "/bin/sh"
    - "-c"
    - "while true; do date; sleep $TIME_FREQ;done > /opt/time/time-check.log"








    pod created with readiness and livness probe:
    
apiVersion: v1    
kind: Pod
metadata:
  labels:
    run: nginx
  name: nginx1401
  namespace: dev1401
spec:
  containers:
  - image: kodekloud/nginx
    imagePullPolicy: IfNotPresent
    name: nginx
    ports:
    - containerPort: 9080
      protocol: TCP
    readinessProbe:
      httpGet:
        path: /
        port: 9080    
    livenessProbe:
      exec:
        command:
        - ls
        - /var/www/html/file_check
      initialDelaySeconds: 10
      periodSeconds: 60
 


apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:alpine



  multi containers pods:        

          
apiVersion: v1
kind: Pod
metadata:
  name: sega
spec:
  containers:
  - image: busybox
    name: tails
    command:
    - sleep
    - "3600"
  - image: nginx
    name: sonic
    env:
    - name: NGINX_PORT


### previlage mode:

apiVersion: v1
kind: Pod
metadata:
  name: privileged-pod
  namespace: ckad-pod-design
spec:
  containers:
  - name: nginx-container
    image: nginx:1.17
    securityContext:
      privileged: true


### multipod with env

apiVersion: v1
kind: Pod
metadata:
  name: tres-containers-pod
spec:
  containers:
  - name: primero
    image: busybox:1.28
    env:
    - name: ORDER
      value: "FIRST"
    command:
    - /bin/sh 
    - -c
    - sleep 3600;
  - name: segundo
    image: nginx:1.17
    ports:
    - containerPort: 8080
  - name: tercero
    image: busybox:1.31.1
    env:
    - name: ORDER
      value: "THIRD"
    command:
    - /bin/sh
    - -c
    - sleep 3600;